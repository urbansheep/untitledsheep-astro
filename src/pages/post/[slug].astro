---
export const prerender = true;

import Layout from '@/layouts/LayoutBase.astro';
import Pagination from '@/components/Pagination.astro';
import '@/styles/prose.css';
import { slugify } from '@/utils/slugify';
import { getFormattedDate, getFormattedTime } from '@/utils/dateFormating';
import { fetchPosts } from '@/utils/fetchPosts';

import type { CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
    const posts = await fetchPosts();
    return posts.map((post) => ({
        params: { slug: post.slug},
        props: {
            post,
            next: posts[posts.indexOf(post) + 1],
            prev: posts[posts.indexOf(post) - 1],
        },
    }));
}

interface Props {
    post: CollectionEntry<'blog'>;
    form: string,
    next?: any;
    prev?: any;
}

const {
    post,
    next,
    prev,
    form = post.data.form,
} = Astro.props;

const { Content } = await post.render();

const title = "Пост " + post.data.id;
const description = "";

// Filter out the "post" tag
const tagList = post.data.tags;

---

<Layout title={title} description={description} type="article">

    <article class:list={[
        "prose",
        form
        ]} itemprop="blogPost" itemscope itemtype="http://schema.org/BlogPosting"
    >

    {post.data.form === 'link' && post.data.linkurl ?
        <h1 class="header">→ <a href={post.data.linkurl} target="_blank" rel="noopener noreferrer nofollow">{post.data.title}</a></h1>
        : <h1 class="header">{post.data.title ? `${post.data.title}` : `Пост ${post.data.id}` }</h1>
    }

        { form === 'photo' &&
            <img
                src={post.data.photo}
                class="cover"
                alt={post.data.photo_caption || post.data.title || ""}
                loading="lazy"
            >
        }


        { Content && <Content />}

    </article>

    <section class="details">
        {
            tagList && tagList.length > 0 &&
                <ul class="tags">
                    { tagList.map((tag) => <li><a href={`/tagged/${slugify(tag)}/`}>{tag}</a></li>)}
                </ul>
        }
        <nav>
            <a class="date" href={post.slug} itemprop="datePublished">{getFormattedDate(post.data.date)}</a> ★
            <a class="date" href={post.data.tumblr}>{getFormattedTime(post.data.date)}</a>
            { post.data.photo_source_url &&
                <>
                    ★ Из <a href={post.data.photo_source_url}>{post.data.photo_source_title}</a>
                </>
            }
        </nav>
    </section>

    { next && prev &&
        <Pagination next={`/post/${next?.data.id}`} prev={`/post/${prev?.data.id}`} />
    }

    { next && !prev &&
        <Pagination next={`/post/${next.data.id}`} />
    }

    { !next && prev &&
        <Pagination prev={`/post/${prev.data.id}`} />
    }

</Layout>

<style>
    .details {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: var(--spacing-lg);
        margin: var(--spacing-2xl) 0;
        color: var(--color-grey-400);
        font-size: var(--font-size-xs);
    }

    .details a {
        color: var(--color-grey-400);
        text-decoration: none;
    }

    .details a:hover {
        color: var(--color-grey-400);
        text-decoration: underline;
    }

    .tags {
        display: flex;
        flex-wrap: wrap;
        list-style: none;
        justify-content: center;
    }

    .tags li::after {
        content: '•';
        padding: 0 var(--spacing-xs);
    }

    .tags li:last-child::after {
        content: ' ';
    }
</style>
