---
import MetaHead from "@/components/MetaHead.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import SkipLinks from "@/components/SkipLinks.astro";
import "@/styles/fonts.css";
import "@/styles/global.css";
import "@/styles/prose.css";
import { SITE } from "@/config";
import { THEME } from "@/config";

export interface Props {
    homepage?: boolean;
    title?: string;
    description?: string;
    type?: string;
    ogImage?: {
        template: string;
        data?: Record<string, any>;
    };
}

const {
    homepage = false,
    title = SITE.title,
    description = SITE.description,
    type = "website",
    ogImage,
} = Astro.props;

const canonical = new URL(Astro.url.pathname, Astro.site);

// Headers for Content Security Policy
Astro.response.headers.set(
    "Content-Security-Policy",
    "default-src 'self' urbansheep.com *.urbansheep.com; img-src *; ",
);

// Headers for caching - 1 week
Astro.response.headers.set("Cache-Control", "max-age=604800");

// create new const ogImageUrl which is string
// if ogImage is not defined, use default image: og/default.png
// else use the template and data to generate the image: /og/blog.png?title={data.title}

// prettier-ignore
const ogImageUrl = ogImage
    ? `${Astro.url.origin}/og/${
        ogImage.template
        }.png?title=${encodeURIComponent(title)}`
    : `${Astro.url.origin}/og/default.png`;
---

<!doctype html>
<html lang={THEME.language} dir={THEME.textDirection} class="page">
    <MetaHead
        homepage={homepage}
        title={title}
        description={description}
        canonical={canonical}
        type={type}
        ogImage={ogImageUrl}
    />

    <body class="body">
        <SkipLinks />
        <div class="wrapper">
            <Header />
            <main class="main">
                <slot />
            </main>
            <Footer />
        </div>
    </body>
</html>
